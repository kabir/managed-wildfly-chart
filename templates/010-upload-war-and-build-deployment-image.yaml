########################################################################################################################
# Takes a war uploaded by the user, and puts it into an image based on ubi8.
# The resulting image is tagged and pushed to <app-name>-deployment:latest
########################################################################################################################
apiVersion: v1
kind: List
items:
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      name: {{ .Release.Name }}-ubi-minimal
      labels:
        app: {{ .Release.Name }}
    spec:
      lookupPolicy:
        local: false
      tags:
        - annotations:
            openshift.io/imported-from: registry.access.redhat.com/ubi8/ubi-minimal
          from:
            kind: DockerImage
            name: registry.access.redhat.com/ubi8/ubi-minimal
          generation: null
          importPolicy: {}
          name: latest
          referencePolicy:
            type: ""
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      name: {{ .Release.Name }}-deployment
      labels:
        app: {{ .Release.Name }}
    spec:
      lookupPolicy:
        local: false
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      name: {{ .Release.Name }}-deployment-build
      labels:
        app: {{ .Release.Name }}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: {{ .Release.Name }}-deployment:latest
      postCommit: {}
      resources: {}
      source:
        type: Binary
        binary: {}
        dockerfile: |-
          FROM registry.access.redhat.com/ubi8/ubi-minimal
          # Copy war and config files (the wildcards should work and pick out the war files, and the server-config.xml, server-init.yml and server-init.cli files) 
          COPY *.war server-config.* server-init.* /tmp/artifacts/
      strategy:
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: {{ .Release.Name }}-ubi-minimal:latest
        type: Docker