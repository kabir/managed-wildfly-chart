########################################################################################################################
# Copies the war from {{ .Release.Name }}-deployment:latest into the provisioned server in an image
# based on <app-name>-wildfly-runtime:latest.
# The resulting image is tagged and pushed to <app-name>-wildfly-runtime:latest
########################################################################################################################
apiVersion: v1
kind: List
items:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        image.openshift.io/triggers: |-
          [
            {
              "from":{
                "kind":"ImageStreamTag",
                "name":"{{ .Release.Name }}:latest"
              },
              "fieldPath":"spec.template.spec.containers[0].image"
            }
          ]
      name: {{ .Release.Name }}
      namespace: {{ .Release.Namespace }}
      labels:
        app: {{ .Release.Name }}
    spec:
      replicas: {{ .Values.deploy.replicas }}
      selector:
        matchLabels:
          app: {{ .Release.Name }}
      strategy: { }
      template:
        metadata:
          labels:
            app: {{ .Release.Name }}
        spec:
          containers:
            - name: {{ .Release.Name }}
              image: {{ .Release.Name }}:latest
              imagePullPolicy: Always
              ports:
                - name: jolokia
                  containerPort: 8778
                  protocol: TCP
                - name: http
                  containerPort: 8080
                  protocol: TCP
                - name: ping
                  containerPort: 8888
                  protocol: TCP
                - name: admin
                  containerPort: 9990
                  protocol: TCP
                {{- if .Values.deploy.tls.enabled }}
                - name: https
                  containerPort: 8443
                  protocol: TCP
                {{- end }}
              {{- if .Values.deploy.resources }}
              resources:
                {{- toYaml .Values.deploy.resources | nindent 16 }}
              {{- end }}
              {{- if .Values.deploy.livenessProbe }}
              livenessProbe:
                {{- tpl (toYaml .Values.deploy.livenessProbe) . | nindent 16 }}
              {{- end }}
              {{- if .Values.deploy.readinessProbe }}
              readinessProbe:
                {{- tpl (toYaml .Values.deploy.readinessProbe) . | nindent 16 }}
              {{- end }}
              {{- if .Values.deploy.startupProbe }}
              startupProbe:
                {{- tpl (toYaml .Values.deploy.startupProbe) . | nindent 16 }}
              {{- end }}
              {{- if .Values.deploy.volumeMounts }}
              volumeMounts:
                {{- tpl (toYaml .Values.deploy.volumeMounts) . | nindent 16 }}
              {{- end }}
              env:
                - name: JGROUPS_PING_PROTOCOL
                  value: dns.DNS_PING
                - name: OPENSHIFT_DNS_PING_SERVICE_PORT
                  value: '8888'
                - name: ENABLE_GENERATE_DEFAULT_DATASOURCE
                  value: 'false'
                - name: SERVER_PUBLIC_BIND_ADDRESS
                  value: 0.0.0.0
                {{- if .Values.deploy.env }}
                {{- tpl (toYaml .Values.deploy.env) . | nindent 16 }}
                {{- end }}
                {{- if .Values.deploy.envFrom }}
              envFrom:
                {{- tpl (toYaml .Values.deploy.envFrom) . | nindent 16 }}
                {{- end }}
            {{- if .Values.deploy.extraContainers }}
            {{- tpl (toYaml .Values.deploy.extraContainers) . | nindent 14 }}
            {{- end }}
          {{- if .Values.deploy.volumes }}
          volumes:
            {{- tpl (toYaml .Values.deploy.volumes) . | nindent 12 }}
          {{- end }}



  - kind: Service
    apiVersion: v1
    metadata:
      name: {{ .Release.Name }}
      namespace: {{ .Release.Namespace }}
      labels:
        app: {{ .Release.Name }}
    spec:
      ipFamilies:
        - IPv4
      ports:
        - protocol: TCP
          port: 8080
          targetPort: 8080
      internalTrafficPolicy: Cluster
      type: ClusterIP
      sessionAffinity: None
      ipFamilyPolicy: SingleStack
      selector:
        app: {{ .Release.Name }}
  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: {{ .Release.Name }}
      namespace: {{ .Release.Namespace }}
      labels:
        app: {{ .Release.Name }}
    spec:
      to:
        kind: Service
        name: {{ .Release.Name }}
        weight: 100
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
      wildcardPolicy: None